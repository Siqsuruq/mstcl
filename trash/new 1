package require tdom
set fp [read [open ./test_data/mapfile_full.xml r]]
dom parse $fp doc
set root [$doc documentElement]
set key_words [list LEGEND OUTPUTFORMAT PROJECTION LABEL]

set ::lvl \t

proc incrlvl {} {
	set ::lvl $::lvl\t
}
proc decrlvl {} {
	set ::lvl [string range $::lvl 0 end-1]
}

proc attribute {mapword attr} {
	if {$mapword eq "IMAGECOLOR" || $mapword eq "OUTLINECOLOR"} {
		for {set x 0} {$x<[llength $attr]} {incr x 2} {
			puts -nonewline " [lindex $attr [expr $x+1]]"
		}
	} elseif {$mapword eq "SIZE" || $mapword eq "KEYSIZE" || $mapword eq "KEYSPACING"} {
		for {set x 0} {$x<[llength $attr]} {incr x 2} {
			puts -nonewline " [lindex $attr [expr $x+1]]"
		}
	} else {
		for {set x 0} {$x<[llength $attr]} {incr x 2} {
			puts -nonewline "\n$::lvl[string toupper [lindex $attr $x]] [lindex $attr [expr $x+1]]"
		}
	}
}


proc parse_line {a} {
	set mapword [string toupper [lindex $a 0]]
	puts -nonewline "\n$::lvl$mapword"
	set attr [lindex $a 1]
	set other [lindex $a 2]
	if {$attr!=""} {
		attribute $mapword $attr
	}
	if {$other!=""} {
		foreach line $other {
			if {[lindex $line 0] eq "#text"} {
				set string [lindex $line 1]
				puts -nonewline " \"$string\""
			} else {
				if {$mapword eq "LEGEND"} {
					foreach otl $other {
						parse_line $otl
					}
					puts -nonewline "\n$::lvl END"
				}
			}
		}
	}
	
	set a [lsearch -inline $::key_words $mapword]
	if {$a != ""} {
		puts -nonewline "\n$::lvl END"
	}

}

foreach a [lindex [$root asList] 2] {
	parse_line $a
}

